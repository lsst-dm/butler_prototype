run: ingest
datastore:
  cls: lsst.daf.butler.datastores.posixDatastore.PosixDatastore
  root: ./butler_test_repository
  templates:
    default: "{datasetType}/{tract:?}/{patch:?}/{filter:?}/{camera:?}_{visit:?}"
    calexp: "{datasetType}.{component:?}/{datasetType}_v{visit}_f{filter:?}_{component:?}"
    metric: "{datasetType}.{component:?}/{datasetType}_v{visit:08d}_f{filter}_{component:?}"
    test_metric_comp: "{datasetType}.{component:?}/{datasetType}_v{visit:08d}_f{camera}_{component:?}"
  formatters:
    StructuredDataDictYaml: lsst.daf.butler.formatters.yamlFormatter.YamlFormatter
    StructuredDataListYaml: lsst.daf.butler.formatters.yamlFormatter.YamlFormatter
    StructuredDataDictJson: lsst.daf.butler.formatters.jsonFormatter.JsonFormatter
    StructuredDataListJson: lsst.daf.butler.formatters.jsonFormatter.JsonFormatter
    StructuredDataDictPickle: lsst.daf.butler.formatters.pickleFormatter.PickleFormatter
    StructuredDataListPickle: lsst.daf.butler.formatters.pickleFormatter.PickleFormatter
    StructuredData: lsst.daf.butler.formatters.yamlFormatter.YamlFormatter
    StructuredDataJson: lsst.daf.butler.formatters.jsonFormatter.JsonFormatter
    StructuredDataPickle: lsst.daf.butler.formatters.pickleFormatter.PickleFormatter
storageClasses:
  StructuredDataDictYaml:
    pytype: dict
  StructuredDataListYaml:
    pytype: list
  StructuredDataDictJson:
    pytype: dict
  StructuredDataListJson:
    pytype: list
  StructuredDataDictPickle:
    pytype: dict
  StructuredDataListPickle:
    pytype: list
  StructuredData: &StructuredData
    # Data from a simple Python class
    pytype: examplePythonTypes.MetricsExample
    assembler: lsst.daf.butler.core.composites.CompositeAssemblerMonolithic
    # Use YAML formatter by default
    components:
      # Components are those supported by get.
      summary: StructuredDataDictYaml
      output: StructuredDataDictYaml
      data: StructuredDataListYaml
  StructuredDataJson:
    <<: *StructuredData
  StructuredDataPickle:
    <<: *StructuredData
  StructuredComposite: &StructuredComposite
    pytype: examplePythonTypes.MetricsExample
    assembler: lsst.daf.butler.core.composites.CompositeAssembler
    components:
      summary: StructuredDataDictYaml
      output: StructuredDataDictYaml
      data: StructuredDataListYaml
  StructuredCompositeTestA:
    <<: *StructuredComposite
    components:
      summary: StructuredDataDictJson
      output: StructuredDataDictJson
      data: StructuredDataListJson
  StructuredCompositeTestB:
    <<: *StructuredComposite
    components:
      summary: StructuredDataDictPickle
      output: StructuredDataDictJson
      data: StructuredDataListYaml
